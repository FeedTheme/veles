@import "bootstrap";

$navicon_height: 4em;
$front_title_offset: 12em;
$section_padding: 4em;
$loc_chart_size: 20vw;
$loc_chart_colors: blue green red orange;

body {
  margin: 0;
  overflow-x: hidden;
  overflow-y: auto;
  font-size: 0.8658vw;
  line-height: 1;
}

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
  font-weight: bold;
  line-height: 1;
  margin-bottom: 0;
  margin-top: 0;
}

h1 {
  font-size: 8em;
}

.title > h1 {
  margin: 0;
}

h2 {
  font-size: 4em;
}

.title > h2 {
  margin-top: 0.5em;
}

h3 {
  font-size: 2em;
}

#promo {
  background: #404040 url("../../../img/background.jpg");
  background-size: cover;
  background-blend-mode: multiply;
  width: 100vw;
  height: 95vh;
  min-height: 40vw;
  max-height: 95vh;
}

section {
  color: white;
  position: relative;
  max-height: 50vw;
  width: 100vw;
}

.boast {
  position: absolute;
  left: 0;
  bottom: 0;
  padding: 0 0 $section_padding $section_padding;
  width: 50%;
}

.boast h2 {
  @extend .fabrica;
  margin-bottom: 1em;
}

.boast p {
  @extend .boast-content;
  font-size: 2em;
  font-weight: bold;
}

.boast-content {
  color: #b7b7b7;
  @extend .infinity;
}

.parallax {
  height: 90vh;
  background-attachment: fixed !important;
  background-blend-mode: multiply;
  background-size: cover !important;
}

.details {
  background-color: white;
  height: 600px;
  padding: $section_padding;
  color: black;
  font-size: 2em;
}

#doneright {
  background: #404040 url("../../../img/weights.png")
}

#contributions {
  background: #404040 url("../../../img/constellation.jpg")
}

#hadoop {
  background: #404040 url("../../../img/elephants.jpg")
}

nav {
  position: fixed;
  width: 100vw;
  height: $navicon_height * 2;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.8) 50%, rgba(0, 0, 0, 0) 100%);
  line-height: $navicon_height;
  z-index: 10;
}

#links {
  position: absolute;
  right: $front_title_offset;
}

.toplink {
  color: rgba(255, 255, 255, 0);
  display: inline-block;
}

.toplink > img  {
  width: $navicon_height;
  height: $navicon_height;
  object-fit: contain;
  opacity: 0.6;
  display: inline-block;
}

.toplink > img:hover {
  opacity: 1.0;
}

#link-gerrit {
  margin-left: 0.5em;
}

#link-forge {
  margin-left: -0.5em;
}

.toplink:hover::after {
  content: attr(hint);
  display: inline-block;
  position: absolute;
  left: 26em;
  top: 0.25em;
  color: white;
  font-family: 'Fabrica', arial, sans-serif;
}

@font-face {
  font-family: 'Fabrica';
  src: url('../../../fonts/Fabrica.otf');
}

@font-face {
  font-family: 'Infinity';
  src: url('../../../fonts/Infinity.ttf');
}

#title {
  position: absolute;
  left: $front_title_offset;
  top: 50%;
  width: calc(100vw - #{$front_title_offset} * 2);
  color: white;
}

.fabrica {
  font-family: 'Fabrica', arial, sans-serif;
}

.infinity {
  font-family: 'Infinity', arial, sans-serif;
  letter-spacing: 0.075em;
}

#svg-samsung {
  width: 6em;
  display: inline-block;
  vertical-align: middle;
}

a:hover {
  color: white;
}

#loc-pie {
  float: right;
  margin-left: $section_padding;
  margin-bottom: $section_padding;
}

#loc-pie > h4 {
  @extend .fabrica;
  font-size: 1em;
  text-align: center;
  margin-bottom: 1em;
}

#loc-pie-container {
  position: relative;
  width: $loc_chart_size;
  height: $loc_chart_size;
}

.pie {
	position:absolute;
	width: $loc_chart_size / 2;
	height: $loc_chart_size;
	overflow: hidden;
	left: $loc_chart_size / 2;
	transform-origin: left center;
}

.pie.pie-180 {
	width: $loc_chart_size;
	height: $loc_chart_size;
	left: 0px;
	transform-origin: center center;
}

.pie::before {
	content: "";
	position: absolute;
	width: $loc_chart_size / 2;
	height: $loc_chart_size;
	left: -$loc_chart_size / 2;
	border-radius: $loc_chart_size / 2 0 0 $loc_chart_size / 2;
	transform-origin: right center;

}

.pie.pie-180::before {
	left: 0px;
}

.pie.pie-180::after {
	content: "";
	position: absolute;
	width: $loc_chart_size / 2;
	height: $loc_chart_size;
	left: $loc_chart_size / 2;
	border-radius: 0 $loc_chart_size / 2 $loc_chart_size / 2 0;
}

@for $i from 1 through length($loc_chart_colors) {
  .pie:nth-of-type(#{$i})::before,
  .pie:nth-of-type(#{$i})::after {
  	background-color: nth($loc_chart_colors, $i);
  }
}

.pie[data-start="30"] {
	transform: rotate(30deg);
}
.pie[data-start="60"] {
	transform: rotate(60deg);
}
.pie[data-start="100"] {
	transform: rotate(100deg);
}

.pie[data-value="30"]::before {
	transform: rotate(31deg);
}
.pie[data-value="40"]::before {
	transform: rotate(41deg);
}
.pie[data-value="260"]::before {
	transform: rotate(260deg);
}
/*
NOTE: you could also apply custom classes (i.e. .s0 .v30)
but if the CSS3 attr() function proposal ever gets implemented,
then all the above custom piece rules could be replaced with
the following:

.pie[data-start] {
   transform:rotate(attr(data-start,deg,0);
}
.pie[data-value]::before {
   transform:rotate(attr(data-value,deg,0);
}
*/
